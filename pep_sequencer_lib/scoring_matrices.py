import os
import ast
import numpy as np

#############################################################################
#################### Definition of Matrixes #################################

#matrices_names = ["BLOSUM62"]#, "DDMC_SC1", "SPC_MATRIX", "CCPC_MATRIX",
                  #"AZAE2_MATRIX", "NAOD_MATRIX", "QU3_MATRIX", "QU1_MATRIX",
                  #"QU2_MATRIX", "QUIB_MATRIX", "SH_MATRIX"
                  #]
matrices_names = ["BLOSUM62"]

def prepare_matrix(matrix):
    for k in list(matrix.keys()):
        if not (k[1], k[0]) in matrix:
            matrix[(k[1], k[0])] = matrix[k]
    return matrix

def update_matrix(my_matrix, update_val=0):
    for aa in ("QWERTYIPASDFGHKLXCVNMZ"):
        my_matrix[("X", aa)] = update_val
        my_matrix[("Z", aa)] = update_val

    return my_matrix

#BLOSUM62
blosum62 = {
          ('W', 'F'): 1, ('L', 'R'): -2, ('S', 'P'): -1, ('V', 'T'): 0,
          ('Q', 'Q'): 5, ('N', 'A'): -2, ('Z', 'Y'): -2, ('W', 'R'): -3,
          ('Q', 'A'): -1, ('S', 'D'): 0, ('H', 'H'): 8, ('S', 'H'): -1,
          ('H', 'D'): -1, ('L', 'N'): -3, ('W', 'A'): -3, ('Y', 'M'): -1,
          ('G', 'R'): -2, ('Y', 'I'): -1, ('Y', 'E'): -2, ('B', 'Y'): -3,
          ('Y', 'A'): -2, ('V', 'D'): -3, ('B', 'S'): 0, ('Y', 'Y'): 7,
          ('G', 'N'): 0, ('E', 'C'): -4, ('Y', 'Q'): -1, ('Z', 'Z'): 4,
          ('V', 'A'): 0, ('C', 'C'): 9, ('M', 'R'): -1, ('V', 'E'): -2,
          ('T', 'N'): 0, ('P', 'P'): 7, ('V', 'I'): 3, ('V', 'S'): -2,
          ('Z', 'P'): -1, ('V', 'M'): 1, ('T', 'F'): -2, ('V', 'Q'): -2,
          ('K', 'K'): 5, ('P', 'D'): -1, ('I', 'H'): -3, ('I', 'D'): -3,
          ('T', 'R'): -1, ('P', 'L'): -3, ('K', 'G'): -2, ('M', 'N'): -2,
          ('P', 'H'): -2, ('F', 'Q'): -3, ('Z', 'G'): -2, ('X', 'L'): -1,
          ('T', 'M'): -1, ('Z', 'C'): -3, ('X', 'H'): -1, ('D', 'R'): -2,
          ('B', 'W'): -4, ('X', 'D'): -1, ('Z', 'K'): 1, ('F', 'A'): -2,
          ('Z', 'W'): -3, ('F', 'E'): -3, ('D', 'N'): 1, ('B', 'K'): 0,
          ('X', 'X'): -1, ('F', 'I'): 0, ('B', 'G'): -1, ('X', 'T'): 0,
          ('F', 'M'): 0, ('B', 'C'): -3, ('Z', 'I'): -3, ('Z', 'V'): -2,
          ('S', 'S'): 4, ('L', 'Q'): -2, ('W', 'E'): -3, ('Q', 'R'): 1,
          ('N', 'N'): 6, ('W', 'M'): -1, ('Q', 'C'): -3, ('W', 'I'): -3,
          ('S', 'C'): -1, ('L', 'A'): -1, ('S', 'G'): 0, ('L', 'E'): -3,
          ('W', 'Q'): -2, ('H', 'G'): -2, ('S', 'K'): 0, ('Q', 'N'): 0,
          ('N', 'R'): 0, ('H', 'C'): -3, ('Y', 'N'): -2, ('G', 'Q'): -2,
          ('Y', 'F'): 3, ('C', 'A'): 0, ('V', 'L'): 1, ('G', 'E'): -2,
          ('G', 'A'): 0, ('K', 'R'): 2, ('E', 'D'): 2, ('Y', 'R'): -2,
          ('M', 'Q'): 0, ('T', 'I'): -1, ('C', 'D'): -3, ('V', 'F'): -1,
          ('T', 'A'): 0, ('T', 'P'): -1, ('B', 'P'): -2, ('T', 'E'): -1,
          ('V', 'N'): -3, ('P', 'G'): -2, ('M', 'A'): -1, ('K', 'H'): -1,
          ('V', 'R'): -3, ('P', 'C'): -3, ('M', 'E'): -2, ('K', 'L'): -2,
          ('V', 'V'): 4, ('M', 'I'): 1, ('T', 'Q'): -1, ('I', 'G'): -4,
          ('P', 'K'): -1, ('M', 'M'): 5, ('K', 'D'): -1, ('I', 'C'): -1,
          ('Z', 'D'): 1, ('F', 'R'): -3, ('X', 'K'): -1, ('Q', 'D'): 0,
          ('X', 'G'): -1, ('Z', 'L'): -3, ('X', 'C'): -2, ('Z', 'H'): 0,
          ('B', 'L'): -4, ('B', 'H'): 0, ('F', 'F'): 6, ('X', 'W'): -2,
          ('B', 'D'): 4, ('D', 'A'): -2, ('S', 'L'): -2, ('X', 'S'): 0,
          ('F', 'N'): -3, ('S', 'R'): -1, ('W', 'D'): -4, ('V', 'Y'): -1,
          ('W', 'L'): -2, ('H', 'R'): 0, ('W', 'H'): -2, ('H', 'N'): 1,
          ('W', 'T'): -2, ('T', 'T'): 5, ('S', 'F'): -2, ('W', 'P'): -4,
          ('L', 'D'): -4, ('B', 'I'): -3, ('L', 'H'): -3, ('S', 'N'): 1,
          ('B', 'T'): -1, ('L', 'L'): 4, ('Y', 'K'): -2, ('E', 'Q'): 2,
          ('Y', 'G'): -3, ('Z', 'S'): 0, ('Y', 'C'): -2, ('G', 'D'): -1,
          ('B', 'V'): -3, ('E', 'A'): -1, ('Y', 'W'): 2, ('E', 'E'): 5,
          ('Y', 'S'): -2, ('C', 'N'): -3, ('V', 'C'): -1, ('T', 'H'): -2,
          ('P', 'R'): -2, ('V', 'G'): -3, ('T', 'L'): -1, ('V', 'K'): -2,
          ('K', 'Q'): 1, ('R', 'A'): -1, ('I', 'R'): -3, ('T', 'D'): -1,
          ('P', 'F'): -4, ('I', 'N'): -3, ('K', 'I'): -3, ('M', 'D'): -3,
          ('V', 'W'): -3, ('W', 'W'): 11, ('M', 'H'): -2, ('P', 'N'): -2,
          ('K', 'A'): -1, ('M', 'L'): 2, ('K', 'E'): 1, ('Z', 'E'): 4,
          ('X', 'N'): -1, ('Z', 'A'): -1, ('Z', 'M'): -1, ('X', 'F'): -1,
          ('K', 'C'): -3, ('B', 'Q'): 0, ('X', 'B'): -1, ('B', 'M'): -3,
          ('F', 'C'): -2, ('Z', 'Q'): 3, ('X', 'Z'): -1, ('F', 'G'): -3,
          ('B', 'E'): 1, ('X', 'V'): -1, ('F', 'K'): -3, ('B', 'A'): -2,
          ('X', 'R'): -1, ('D', 'D'): 6, ('W', 'G'): -2, ('Z', 'F'): -3,
          ('S', 'Q'): 0, ('W', 'C'): -2, ('W', 'K'): -3, ('H', 'Q'): 0,
          ('L', 'C'): -1, ('W', 'N'): -4, ('S', 'A'): 1, ('L', 'G'): -4,
          ('W', 'S'): -3, ('S', 'E'): 0, ('H', 'E'): 0, ('S', 'I'): -2,
          ('H', 'A'): -2, ('S', 'M'): -1, ('Y', 'L'): -1, ('Y', 'H'): 2,
          ('Y', 'D'): -3, ('E', 'R'): 0, ('X', 'P'): -2, ('G', 'G'): 6,
          ('G', 'C'): -3, ('E', 'N'): 0, ('Y', 'T'): -2, ('Y', 'P'): -3,
          ('T', 'K'): -1, ('A', 'A'): 4, ('P', 'Q'): -1, ('T', 'C'): -1,
          ('V', 'H'): -3, ('T', 'G'): -2, ('I', 'Q'): -3, ('Z', 'T'): -1,
          ('C', 'R'): -3, ('V', 'P'): -2, ('P', 'E'): -1, ('M', 'C'): -1,
          ('K', 'N'): 0, ('I', 'I'): 4, ('P', 'A'): -1, ('M', 'G'): -3,
          ('T', 'S'): 1, ('I', 'E'): -3, ('P', 'M'): -2, ('M', 'K'): -1,
          ('I', 'A'): -1, ('P', 'I'): -3, ('R', 'R'): 5, ('X', 'M'): -1,
          ('L', 'I'): 2, ('X', 'I'): -1, ('Z', 'B'): 1, ('X', 'E'): -1,
          ('Z', 'N'): 0, ('X', 'A'): 0, ('B', 'R'): -1, ('B', 'N'): 3,
          ('F', 'D'): -3, ('X', 'Y'): -1, ('Z', 'R'): 0, ('F', 'H'): -1,
          ('B', 'F'): -3, ('F', 'L'): 0, ('X', 'Q'): -1, ('B', 'B'): 4
          }
blosum62 = prepare_matrix(blosum62)

# DDMC
ddmc_sc1 = {('R', 'I'): 4.219, ('W', 'L'): 4.337, ('G', 'G'): 7.543, ('S', 'N'): -13.046, ('E', 'S'): 0.343, ('D', 'L'): -22.756, ('W', 'R'): -26.209, ('E', 'M'): -2.197, ('C', 'M'): -1.181, ('V', 'M'): 1.789, ('I', 'D'): -29.793, ('W', 'C'): -12.254, ('A', 'N'): -8.788, ('Y', 'D'): -12.518, ('T', 'I'): 2.205, ('D', 'G'): -14.012, ('V', 'N'): -2.089, ('Q', 'N'): -9.148, ('R', 'K'): 2.615, ('S', 'L'): -18.194, ('F', 'M'): -17.135, ('S', 'C'): -1.786, ('E', 'D'): -0.576, ('Y', 'G'): -12.775, ('W', 'P'): -4.677, ('E', 'Y'): -4.994, ('H', 'K'): 5.956, ('Q', 'A'): 7.58, ('G', 'V'): -20.435, ('I', 'F'): 1.312, ('R', 'L'): 5.574, ('K', 'V'): -1.172, ('W', 'A'): 19.275, ('E', 'G'): -29.969, ('T', 'N'): -10.465, ('Y', 'F'): 18.221, ('W', 'W'): 28.347, ('F', 'V'): 8.12, ('R', 'M'): 6.826, ('S', 'S'): 12.698, ('E', 'T'): -3.935, ('Q', 'T'): -4.693, ('D', 'C'): -17.281, ('P', 'P'): 0.649, ('K', 'C'): -13.879, ('D', 'H'): -1.901, ('E', 'F'): -7.293, ('Q', 'Q'): 23.14, ('W', 'V'): 11.461, ('I', 'V'): 18.946, ('E', 'I'): -8.799, ('I', 'A'): -2.001, ('Q', 'C'): -21.691, ('I', 'H'): -0.194, ('R', 'N'): -6.676, ('A', 'K'): 0.121, ('W', 'G'): -28.287, ('T', 'G'): -28.55, ('T', 'L'): -4.698, ('Q', 'P'): -29.737, ('N', 'N'): 18.399, ('L', 'M'): 17.062, ('F', 'G'): -25.309, ('G', 'K'): -26.599, ('C', 'V'): 17.534, ('E', 'V'): -4.959, ('W', 'F'): 12.027, ('Q', 'F'): -12.002, ('S', 'H'): -8.28, ('P', 'V'): -29.328, ('Y', 'K'): -5.4, ('W', 'T'): 2.195, ('E', 'K'): 6.747, ('I', 'C'): 3.348, ('Q', 'E'): 19.582, ('R', 'P'): -28.257, ('A', 'M'): -1.949, ('W', 'E'): 15.208, ('A', 'D'): -3.791, ('Q', 'R'): 10.764, ('T', 'S'): 2.268, ('A', 'V'): 6.142, ('S', 'M'): -15.567, ('E', 'H'): -4.702, ('Q', 'D'): 2.301, ('P', 'A'): -26.895, ('D', 'F'): -28.573, ('E', 'P'): -29.983, ('V', 'V'): 23.587, ('W', 'D'): -22.039, ('H', 'V'): -4.082, ('S', 'F'): -12.386, ('S', 'G'): -13.726, ('P', 'N'): -29.998, ('I', 'S'): -10.054, ('P', 'M'): -13.345, ('Y', 'M'): 6.151, ('S', 'D'): -8.422, ('H', 'M'): -28.308, ('Y', 'C'): 14.591, ('Q', 'G'): -18.646, ('G', 'H'): -29.941, ('I', 'L'): 9.036, ('R', 'R'): 21.53, ('Q', 'M'): -0.871, ('T', 'C'): 16.299, ('A', 'F'): -7.032, ('K', 'N'): -11.986, ('T', 'H'): -2.84, ('Y', 'I'): 3.724, ('Y', 'L'): 10.689, ('E', 'C'): -18.489, ('R', 'A'): 0.612, ('D', 'V'): -19.892, ('F', 'C'): -10.336, ('T', 'T'): 16.537, ('S', 'V'): -11.65, ('E', 'L'): 3.334, ('R', 'S'): -8.5, ('D', 'D'): 7.29, ('E', 'R'): 6.675, ('D', 'M'): -29.588, ('E', 'E'): 17.864, ('K', 'M'): 5.091, ('P', 'C'): -28.826, ('Q', 'W'): -26.564, ('C', 'C'): 20.672, ('I', 'G'): -29.961, ('W', 'K'): -7.891, ('G', 'N'): -17.811, ('I', 'N'): -3.542, ('R', 'T'): -8.943, ('Q', 'S'): 12.735, ('A', 'A'): 20.224, ('F', 'K'): -4.477, ('T', 'A'): -0.913, ('K', 'L'): -2.633, ('T', 'V'): 7.861, ('A', 'S'): 6.979, ('Y', 'N'): 2.032, ('F', 'F'): 28.419, ('R', 'C'): -9.003, ('G', 'M'): -29.673, ('Q', 'I'): 1.635, ('Y', 'V'): 1.947, ('Q', 'K'): 14.12, ('S', 'K'): -3.527, ('P', 'S'): -27.041, ('D', 'K'): -16.215, ('P', 'H'): -25.357, ('K', 'K'): 11.119, ('H', 'C'): -19.334, ('E', 'N'): -10.323, ('F', 'L'): 10.563, ('H', 'H'): 20.745, ('R', 'D'): 5.179, ('I', 'I'): 25.655, ('W', 'I'): 4.047, ('G', 'L'): -15.167, ('A', 'H'): -3.641, ('R', 'V'): -5.862, ('T', 'F'): -12.547, ('A', 'C'): 8.257, ('L', 'L'): 24.355, ('Q', 'H'): -2.474, ('M', 'M'): 30.0, ('W', 'H'): -0.387, ('G', 'C'): -19.088, ('Q', 'Y'): -0.656, ('W', 'Y'): 29.785, ('Y', 'A'): -9.229, ('P', 'G'): -29.93, ('F', 'N'): 20.537, ('P', 'D'): -29.377, ('R', 'F'): -24.648, ('P', 'F'): -28.967, ('I', 'K'): 12.202, ('Y', 'S'): -9.661, ('P', 'K'): -27.955, ('W', 'S'): -15.937, ('T', 'D'): -11.674, ('T', 'M'): -5.222, ('E', 'A'): 5.144, ('Y', 'H'): -0.836, ('L', 'N'): -17.442, ('L', 'C'): 5.538, ('R', 'G'): -27.672, ('W', 'N'): -27.957, ('R', 'Y'): -4.565, ('D', 'N'): 7.741, ('Q', 'V'): 0.857, ('I', 'P'): -29.821, ('P', 'L'): -29.878, ('F', 'H'): 4.565, ('H', 'L'): -16.859, ('R', 'H'): 5.196, ('L', 'V'): 7.985, ('I', 'M'): 7.037, ('W', 'M'): -6.804, ('H', 'N'): 4.873, ('A', 'L'): 2.869, ('A', 'G'): -16.147, ('Y', 'P'): -29.684, ('Y', 'Y'): 27.931, ('T', 'K'): -1.2, ('C', 'N'): -13.39, ('T', 'P'): -29.949, ('N', 'M'): -9.974, ('Q', 'L'): 3.539, ('T', 'Y'): -4.588
}
ddmc_sc1 = update_matrix(ddmc_sc1, update_val=np.mean(list(ddmc_sc1.values())))
ddmc_sc1 = prepare_matrix(ddmc_sc1)



#SPC
spc_matrix = {('R', 'I'): 0.674, ('W', 'L'): 0.913, ('G', 'G'): 1.0, ('S', 'N'): 0.85, ('E', 'S'): 0.667, ('D', 'L'): 0.681, ('W', 'R'): 0.638, ('E', 'M'): 0.688, ('C', 'M'): 0.874, ('V', 'M'): 0.923, ('I', 'D'): 0.681, ('W', 'C'): 0.86, ('A', 'N'): 0.818, ('Y', 'D'): 0.716, ('T', 'I'): 0.918, ('D', 'G'): 0.723, ('V', 'N'): 0.804, ('Q', 'N'): 0.86, ('R', 'K'): 0.945, ('S', 'L'): 0.842, ('F', 'M'): 0.947, ('S', 'C'): 0.832, ('E', 'D'): 0.918, ('Y', 'G'): 0.836, ('W', 'P'): 0.892, ('E', 'Y'): 0.692, ('H', 'K'): 0.695, ('Q', 'A'): 0.832, ('G', 'V'): 0.881, ('I', 'F'): 0.958, ('R', 'L'): 0.653, ('K', 'V'): 0.645, ('W', 'A'): 0.86, ('E', 'G'): 0.677, ('T', 'N'): 0.851, ('Y', 'F'): 0.889, ('W', 'W'): 1.0, ('F', 'V'): 0.955, ('R', 'M'): 0.684, ('S', 'S'): 1.0, ('E', 'T'): 0.709, ('Q', 'T'): 0.865, ('D', 'C'): 0.67, ('P', 'P'): 1.0, ('K', 'C'): 0.617, ('D', 'H'): 0.684, ('E', 'F'): 0.656, ('Q', 'Q'): 1.0, ('W', 'V'): 0.899, ('I', 'V'): 0.976, ('E', 'I'): 0.635, ('I', 'A'): 0.947, ('Q', 'C'): 0.81, ('I', 'H'): 0.783, ('R', 'N'): 0.765, ('A', 'K'): 0.66, ('W', 'G'): 0.85, ('T', 'G'): 0.907, ('T', 'L'): 0.918, ('Q', 'P'): 0.905, ('N', 'N'): 1.0, ('L', 'M'): 0.947, ('F', 'G'): 0.895, ('G', 'K'): 0.628, ('C', 'V'): 0.881, ('E', 'V'): 0.663, ('W', 'F'): 0.913, ('Q', 'F'): 0.863, ('S', 'H'): 0.836, ('P', 'V'): 0.913, ('Y', 'K'): 0.652, ('W', 'T'): 0.883, ('E', 'K'): 0.546, ('I', 'C'): 0.884, ('Q', 'E'): 0.772, ('R', 'P'): 0.716, ('A', 'M'): 0.895, ('W', 'E'): 0.674, ('A', 'D'): 0.691, ('Q', 'R'): 0.663, ('T', 'S'): 0.907, ('A', 'V'): 0.945, ('S', 'M'): 0.832, ('E', 'H'): 0.638, ('Q', 'D'): 0.818, ('P', 'A'): 0.905, ('D', 'F'): 0.681, ('E', 'P'): 0.698, ('V', 'V'): 1.0, ('W', 'D'): 0.72, ('H', 'V'): 0.769, ('S', 'F'): 0.842, ('S', 'G'): 0.842, ('P', 'N'): 0.892, ('I', 'S'): 0.842, ('P', 'M'): 0.968, ('Y', 'M'): 0.899, ('S', 'D'): 0.734, ('H', 'M'): 0.825, ('Y', 'C'): 0.825, ('Q', 'G'): 0.842, ('G', 'H'): 0.794, ('I', 'L'): 0.979, ('R', 'R'): 1.0, ('Q', 'M'): 0.895, ('T', 'C'): 0.928, ('A', 'F'): 0.947, ('K', 'N'): 0.751, ('T', 'H'): 0.795, ('Y', 'I'): 0.889, ('Y', 'L'): 0.889, ('E', 'C'): 0.624, ('R', 'A'): 0.684, ('D', 'V'): 0.709, ('F', 'C'): 0.905, ('T', 'T'): 1.0, ('S', 'V'): 0.85, ('E', 'L'): 0.656, ('R', 'S'): 0.663, ('D', 'D'): 1.0, ('E', 'R'): 0.54, ('D', 'M'): 0.734, ('E', 'E'): 1.0, ('K', 'M'): 0.66, ('P', 'C'): 0.884, ('Q', 'W'): 0.881, ('C', 'C'): 1.0, ('I', 'G'): 0.874, ('W', 'K'): 0.614, ('G', 'N'): 0.807, ('I', 'N'): 0.807, ('R', 'T'): 0.684, ('Q', 'S'): 0.832, ('A', 'A'): 1.0, ('F', 'K'): 0.649, ('T', 'A'): 0.95, ('K', 'L'): 0.649, ('T', 'V'): 0.92, ('A', 'S'): 0.874, ('Y', 'N'): 0.785, ('F', 'F'): 1.0, ('R', 'C'): 0.663, ('G', 'M'): 0.884, ('Q', 'I'): 0.842, ('Y', 'V'): 0.875, ('Q', 'K'): 0.628, ('S', 'K'): 0.681, ('P', 'S'): 0.842, ('D', 'K'): 0.593, ('P', 'H'): 0.815, ('K', 'K'): 1.0, ('H', 'C'): 0.772, ('E', 'N'): 0.716, ('F', 'L'): 0.979, ('H', 'H'): 1.0, ('R', 'D'): 0.586, ('I', 'I'): 1.0, ('W', 'I'): 0.892, ('G', 'L'): 0.874, ('A', 'H'): 0.772, ('R', 'V'): 0.649, ('T', 'F'): 0.939, ('A', 'C'): 0.937, ('L', 'L'): 1.0, ('Q', 'H'): 0.836, ('M', 'M'): 1.0, ('W', 'H'): 0.79, ('G', 'C'): 0.905, ('Q', 'Y'): 0.878, ('W', 'Y'): 0.928, ('Y', 'A'): 0.836, ('P', 'G'): 0.895, ('F', 'N'): 0.807, ('P', 'D'): 0.765, ('R', 'F'): 0.674, ('P', 'F'): 0.916, ('I', 'K'): 0.67, ('Y', 'S'): 0.783, ('P', 'K'): 0.67, ('W', 'S'): 0.818, ('T', 'D'): 0.755, ('T', 'M'): 0.907, ('E', 'A'): 0.645, ('Y', 'H'): 0.83, ('L', 'N'): 0.807, ('L', 'C'): 0.884, ('R', 'G'): 0.674, ('W', 'N'): 0.804, ('R', 'Y'): 0.677, ('D', 'N'): 0.783, ('Q', 'V'): 0.85, ('I', 'P'): 0.916, ('P', 'L'): 0.916, ('F', 'H'): 0.783, ('H', 'L'): 0.783, ('R', 'H'): 0.751, ('L', 'V'): 0.976, ('I', 'M'): 0.926, ('W', 'M'): 0.923, ('H', 'N'): 0.801, ('A', 'L'): 0.947, ('A', 'G'): 0.926, ('Y', 'P'): 0.889, ('Y', 'Y'): 1.0, ('T', 'K'): 0.66, ('C', 'N'): 0.797, ('T', 'P'): 0.918, ('N', 'M'): 0.86, ('Q', 'L'): 0.863, ('T', 'Y'): 0.859
    }
spc_matrix = update_matrix(spc_matrix, update_val=np.mean(list(spc_matrix.values())))
spc_matrix = prepare_matrix(spc_matrix)


#CCPC
ccpc_matrix = {("A", "A"): 1.000, ("A", "R"): 0.580, ("A", "N"): 0.514, ("A", "D"): 0.266, ("A", "C"): 0.822, ("A", "Q"): 0.709, ("A", "E"): 0.463, ("A", "G"): 0.736, ("A", "H"): 0.723, ("A", "I"): 0.962, ("A", "L"): 0.956, ("A", "K"): 0.513, ("A", "M"): 0.971, ("A", "F"): 0.976, ("A", "P"): 0.861, ("A", "S"): 0.710, ("A", "T"): 0.880, ("A", "W"): 0.949, ("A", "Y"): 0.959, ("A", "V"): 0.968, ("R", "R"): 1.000, ("R", "N"): 0.814, ("R", "D"): 0.566, ("R", "C"): 0.605, ("R", "Q"): 0.825, ("R", "E"): 0.601, ("R", "G"): 0.820, ("R", "H"): 0.859, ("R", "I"): 0.405, ("R", "L"): 0.389, ("R", "K"): 0.959, ("R", "M"): 0.579, ("R", "F"): 0.465, ("R", "P"): 0.798, ("R", "S"): 0.879, ("R", "T"): 0.809, ("R", "W"): 0.658, ("R", "Y"): 0.687, ("R", "V"): 0.417, ("N", "N"): 1.000, ("N", "D"): 0.844, ("N", "C"): 0.650, ("N", "Q"): 0.930, ("N", "E"): 0.808, ("N", "G"): 0.926, ("N", "H"): 0.883, ("N", "I"): 0.292, ("N", "L"): 0.269, ("N", "K"): 0.821, ("N", "M"): 0.568, ("N", "F"): 0.393, ("N", "P"): 0.822, ("N", "S"): 0.920, ("N", "T"): 0.806, ("N", "W"): 0.641, ("N", "Y"): 0.630, ("N", "V"): 0.310, ("D", "D"): 1.000, ("D", "C"): 0.431, ("D", "Q"): 0.766, ("D", "E"): 0.932, ("D", "G"): 0.724, ("D", "H"): 0.689, ("D", "I"): 0.068, ("D", "L"): 0.053, ("D", "K"): 0.571, ("D", "M"): 0.311, ("D", "F"): 0.152, ("D", "P"): 0.604, ("D", "S"): 0.754, ("D", "T"): 0.600, ("D", "W"): 0.404, ("D", "Y"): 0.403, ("D", "V"): 0.092, ("C", "C"): 1.000, ("C", "Q"): 0.777, ("C", "E"): 0.511, ("C", "G"): 0.829, ("C", "H"): 0.822, ("C", "I"): 0.730, ("C", "L"): 0.711, ("C", "K"): 0.549, ("C", "M"): 0.856, ("C", "F"): 0.802, ("C", "P"): 0.852, ("C", "S"): 0.750, ("C", "T"): 0.825, ("C", "W"): 0.892, ("C", "Y"): 0.845, ("C", "V"): 0.737, ("Q", "Q"): 1.000, ("Q", "E"): 0.821, ("Q", "G"): 0.954, ("Q", "H"): 0.922, ("Q", "I"): 0.540, ("Q", "L"): 0.520, ("Q", "K"): 0.819, ("Q", "M"): 0.752, ("Q", "F"): 0.619, ("Q", "P"): 0.930, ("Q", "S"): 0.951, ("Q", "T"): 0.923, ("Q", "W"): 0.814, ("Q", "Y"): 0.809, ("Q", "V"): 0.556, ("E", "E"): 1.000, ("E", "G"): 0.739, ("E", "H"): 0.724, ("E", "I"): 0.314, ("E", "L"): 0.303, ("E", "K"): 0.586, ("E", "M"): 0.490, ("E", "F"): 0.369, ("E", "P"): 0.727, ("E", "S"): 0.792, ("E", "T"): 0.719, ("E", "W"): 0.576, ("E", "Y"): 0.594, ("E", "V"): 0.335, ("G", "G"): 1.000, ("G", "H"): 0.935, ("G", "I"): 0.565, ("G", "L"): 0.546, ("G", "K"): 0.789, ("G", "M"): 0.793, ("G", "F"): 0.665, ("G", "P"): 0.929, ("G", "S"): 0.939, ("G", "T"): 0.910, ("G", "W"): 0.845, ("G", "Y"): 0.825, ("G", "V"): 0.576, ("H", "H"): 1.000, ("H", "I"): 0.552, ("H", "L"): 0.530, ("H", "K"): 0.832, ("H", "M"): 0.773, ("H", "F"): 0.634, ("H", "P"): 0.909, ("H", "S"): 0.960, ("H", "T"): 0.907, ("H", "W"): 0.823, ("H", "Y"): 0.817, ("H", "V"): 0.569, ("I", "I"): 1.000, ("I", "L"): 0.998, ("I", "K"): 0.336, ("I", "M"): 0.930, ("I", "F"): 0.983, ("I", "P"): 0.728, ("I", "S"): 0.526, ("I", "T"): 0.760, ("I", "W"): 0.886, ("I", "Y"): 0.899, ("I", "V"): 0.997, ("L", "L"): 1.000, ("L", "K"): 0.313, ("L", "M"): 0.922, ("L", "F"): 0.982, ("L", "P"): 0.716, ("L", "S"): 0.503, ("L", "T"): 0.742, ("L", "W"): 0.875, ("L", "Y"): 0.893, ("L", "V"): 0.997, ("K", "K"): 1.000, ("K", "M"): 0.523, ("K", "F"): 0.388, ("K", "P"): 0.727, ("K", "S"): 0.873, ("K", "T"): 0.785, ("K", "W"): 0.584, ("K", "Y"): 0.614, ("K", "V"): 0.347, ("M", "M"): 1.000, ("M", "F"): 0.970, ("M", "P"): 0.891, ("M", "S"): 0.733, ("M", "T"): 0.877, ("M", "W"): 0.981, ("M", "Y"): 0.974, ("M", "V"): 0.932, ("F", "F"): 1.000, ("F", "P"): 0.800, ("F", "S"): 0.600, ("F", "T"): 0.799, ("F", "W"): 0.937, ("F", "Y"): 0.938, ("F", "V"): 0.984, ("P", "P"): 1.000, ("P", "S"): 0.898, ("P", "T"): 0.927, ("P", "W"): 0.941, ("P", "Y"): 0.940, ("P", "V"): 0.740, ("S", "S"): 1.000, ("S", "T"): 0.923, ("S", "W"): 0.792, ("S", "Y"): 0.789, ("S", "V"): 0.542, ("T", "T"): 1.000, ("T", "W"): 0.897, ("T", "Y"): 0.908, ("T", "V"): 0.773, ("W", "W"): 1.000, ("W", "Y"): 0.983, ("W", "V"): 0.888, ("Y", "Y"): 1.000, ("Y", "V"): 0.904, ("V", "V"): 1.000
    }
ccpc_matrix = update_matrix(ccpc_matrix, update_val=np.mean(list(ccpc_matrix.values())))
ccpc_matrix = prepare_matrix(ccpc_matrix)

#AZAE2
azae2_matrix = {('W', 'L'): 3.0, ('G', 'G'): 18.0, ('S', 'N'): 6.0, ('K', 'G'): 0.0, ('S', 'E'): 3.0, ('Y', 'E'): -1.0, ('W', 'R'): -4.0, ('I', 'R'): -10.0, ('H', 'E'): 1.0, ('V', 'M'): 1.0, ('N', 'R'): 7.0, ('I', 'D'): -12.0, ('W', 'C'): 0.0, ('N', 'A'): 0.0, ('W', 'Q'): -5.0, ('L', 'Q'): -9.0, ('V', 'N'): -11.0, ('Q', 'N'): 10.0, ('M', 'K'): -5.0, ('G', 'E'): 0.0, ('S', 'L'): -6.0, ('P', 'R'): 1.0, ('K', 'E'): 13.0, ('S', 'C'): -2.0, ('E', 'D'): 10.0, ('Y', 'G'): -1.0, ('W', 'P'): -4.0, ('Q', 'A'): 1.0, ('V', 'Y'): 2.0, ('W', 'A'): -1.0, ('G', 'D'): 8.0, ('K', 'D'): 11.0, ('T', 'N'): 2.0, ('Y', 'F'): 3.0, ('W', 'W'): 6.0, ('L', 'D'): -10.0, ('M', 'R'): -2.0, ('Y', 'K'): -4.0, ('F', 'E'): -7.0, ('M', 'E'): 0.0, ('S', 'H'): 2.0, ('S', 'S'): 7.0, ('Y', 'L'): 2.0, ('H', 'R'): 2.0, ('P', 'A'): -1.0, ('K', 'C'): -10.0, ('S', 'A'): 0.0, ('P', 'I'): -9.0, ('Q', 'Q'): 17.0, ('T', 'Q'): 2.0, ('P', 'F'): -5.0, ('Y', 'W'): 2.0, ('I', 'A'): -3.0, ('V', 'I'): 11.0, ('Q', 'C'): -9.0, ('I', 'H'): -3.0, ('W', 'G'): -1.0, ('T', 'G'): 1.0, ('V', 'H'): -3.0, ('T', 'L'): -4.0, ('Y', 'H'): 0.0, ('M', 'L'): 6.0, ('F', 'G'): -3.0, ('M', 'G'): -5.0, ('S', 'Q'): 4.0, ('V', 'T'): -1.0, ('W', 'F'): 4.0, ('D', 'A'): 0.0, ('K', 'A'): 1.0, ('I', 'Q'): -12.0, ('N', 'N'): 11.0, ('W', 'T'): -1.0, ('P', 'D'): 7.0, ('I', 'C'): 4.0, ('V', 'K'): -13.0, ('K', 'R'): 14.0, ('W', 'E'): -5.0, ('T', 'E'): 1.0, ('L', 'R'): -7.0, ('Q', 'R'): 12.0, ('T', 'S'): 4.0, ('S', 'M'): -5.0, ('M', 'N'): -4.0, ('V', 'D'): -12.0, ('Q', 'D'): 13.0, ('M', 'A'): 1.0, ('K', 'Q'): 16.0, ('V', 'V'): 12.0, ('W', 'D'): -4.0, ('P', 'P'): 33.0, ('S', 'F'): -5.0, ('P', 'L'): -9.0, ('S', 'G'): 6.0, ('P', 'M'): -9.0, ('Y', 'M'): 2.0, ('H', 'D'): 4.0, ('I', 'E'): -10.0, ('V', 'E'): -11.0, ('R', 'R'): 11.0, ('Y', 'D'): -5.0, ('V', 'W'): 4.0, ('T', 'C'): -3.0, ('K', 'N'): 10.0, ('T', 'H'): 3.0, ('Y', 'Y'): 3.0, ('Y', 'I'): 3.0, ('F', 'Q'): -10.0, ('T', 'I'): -2.0, ('L', 'I'): 8.0, ('M', 'Q'): -3.0, ('R', 'A'): 1.0, ('C', 'D'): -8.0, ('M', 'H'): -2.0, ('V', 'F'): 7.0, ('F', 'C'): 3.0, ('T', 'T'): 6.0, ('M', 'C'): 1.0, ('C', 'R'): -7.0, ('D', 'D'): 16.0, ('E', 'R'): 10.0, ('V', 'P'): -5.0, ('S', 'D'): 6.0, ('E', 'E'): 8.0, ('P', 'C'): -2.0, ('F', 'R'): -8.0, ('C', 'C'): 14.0, ('I', 'G'): -8.0, ('V', 'G'): -7.0, ('W', 'K'): -7.0, ('G', 'N'): 7.0, ('I', 'N'): -11.0, ('A', 'A'): 8.0, ('V', 'Q'): -12.0, ('F', 'K'): -10.0, ('T', 'A'): -2.0, ('K', 'L'): -9.0, ('L', 'N'): -9.0, ('Y', 'N'): -4.0, ('F', 'F'): 8.0, ('L', 'G'): -8.0, ('F', 'A'): -2.0, ('S', 'K'): 4.0, ('V', 'R'): -10.0, ('P', 'H'): 3.0, ('K', 'K'): 20.0, ('H', 'C'): -1.0, ('E', 'N'): 8.0, ('F', 'L'): 6.0, ('H', 'H'): 5.0, ('C', 'A'): 2.0, ('I', 'I'): 11.0, ('V', 'A'): -4.0, ('W', 'I'): 4.0, ('T', 'F'): -3.0, ('V', 'S'): -5.0, ('L', 'L'): 10.0, ('F', 'M'): 3.0, ('L', 'E'): -7.0, ('M', 'M'): 4.0, ('D', 'R'): 9.0, ('M', 'D'): -6.0, ('W', 'H'): -1.0, ('G', 'C'): 0.0, ('S', 'R'): 4.0, ('S', 'I'): -7.0, ('P', 'Q'): 0.0, ('Y', 'A'): -1.0, ('E', 'A'): 1.0, ('K', 'I'): -12.0, ('H', 'A'): -2.0, ('P', 'G'): 10.0, ('F', 'N'): -9.0, ('H', 'N'): 2.0, ('Y', 'S'): -1.0, ('V', 'C'): 5.0, ('P', 'K'): 1.0, ('W', 'S'): -3.0, ('T', 'D'): 3.0, ('T', 'M'): -3.0, ('P', 'N'): 8.0, ('K', 'H'): 2.0, ('T', 'R'): 2.0, ('Y', 'R'): -3.0, ('L', 'C'): 2.0, ('W', 'N'): -4.0, ('G', 'A'): 1.0, ('S', 'P'): 5.0, ('E', 'Q'): 13.0, ('H', 'Q'): 2.0, ('D', 'N'): 12.0, ('Y', 'C'): 0.0, ('T', 'P'): 3.0, ('E', 'C'): -6.0, ('Y', 'Q'): -4.0, ('H', 'G'): 5.0, ('P', 'E'): 0.0, ('F', 'H'): -1.0, ('G', 'R'): 0.0, ('W', 'M'): 2.0, ('Y', 'T'): 0.0, ('Y', 'P'): -4.0, ('F', 'D'): -9.0, ('T', 'K'): 2.0, ('C', 'N'): -5.0, ('L', 'H'): -4.0, ('V', 'L'): 6.0, ('F', 'I'): 7.0, ('G', 'Q'): 0.0, ('L', 'A'): 0.0, ('M', 'I'): 3.0
    }
azae2_matrix = update_matrix(azae2_matrix, update_val=np.mean(list(azae2_matrix.values())))
azae2_matrix = prepare_matrix(azae2_matrix)

# NAOD
naod_matrix = {('W', 'L'): 2.0, ('G', 'G'): 12.0, ('S', 'N'): 4.0, ('K', 'G'): 0.0, ('S', 'E'): 3.0, ('Y', 'E'): -2.0, ('W', 'R'): -3.0, ('I', 'R'): -7.0, ('H', 'E'): 2.0, ('V', 'M'): 2.0, ('N', 'R'): 4.0, ('I', 'D'): -9.0, ('W', 'C'): 0.0, ('N', 'A'): 0.0, ('W', 'Q'): -2.0, ('L', 'Q'): -5.0, ('V', 'N'): -8.0, ('Q', 'N'): 5.0, ('M', 'K'): -4.0, ('G', 'E'): 0.0, ('S', 'L'): -5.0, ('P', 'R'): 1.0, ('K', 'E'): 9.0, ('S', 'C'): -3.0, ('E', 'D'): 7.0, ('Y', 'G'): -1.0, ('W', 'P'): -5.0, ('Q', 'A'): 0.0, ('V', 'Y'): 2.0, ('W', 'A'): 0.0, ('G', 'D'): 4.0, ('K', 'D'): 7.0, ('T', 'N'): 2.0, ('Y', 'F'): 2.0, ('W', 'W'): 9.0, ('L', 'D'): -8.0, ('M', 'R'): -2.0, ('Y', 'K'): -3.0, ('F', 'E'): -6.0, ('M', 'E'): -2.0, ('S', 'H'): 2.0, ('S', 'S'): 5.0, ('Y', 'L'): 1.0, ('H', 'R'): 3.0, ('P', 'A'): 0.0, ('K', 'C'): -7.0, ('S', 'A'): 0.0, ('P', 'I'): -8.0, ('Q', 'Q'): 7.0, ('T', 'Q'): 1.0, ('P', 'F'): -4.0, ('Y', 'W'): 2.0, ('I', 'A'): -2.0, ('V', 'I'): 9.0, ('Q', 'C'): -4.0, ('I', 'H'): -3.0, ('W', 'G'): -1.0, ('T', 'G'): 0.0, ('V', 'H'): -2.0, ('T', 'L'): -3.0, ('Y', 'H'): 0.0, ('M', 'L'): 5.0, ('F', 'G'): -3.0, ('M', 'G'): -3.0, ('S', 'Q'): 2.0, ('V', 'T'): -1.0, ('W', 'F'): 3.0, ('D', 'A'): 0.0, ('K', 'A'): 0.0, ('I', 'Q'): -7.0, ('N', 'N'): 8.0, ('W', 'T'): 0.0, ('P', 'D'): 6.0, ('I', 'C'): 4.0, ('V', 'K'): -8.0, ('K', 'R'): 9.0, ('W', 'E'): -3.0, ('T', 'E'): 3.0, ('L', 'R'): -5.0, ('Q', 'R'): 5.0, ('T', 'S'): 2.0, ('S', 'M'): -3.0, ('M', 'N'): -3.0, ('V', 'D'): -9.0, ('Q', 'D'): 6.0, ('M', 'A'): 0.0, ('K', 'Q'): 7.0, ('V', 'V'): 9.0, ('W', 'D'): -4.0, ('P', 'P'): 19.0, ('S', 'F'): -4.0, ('P', 'L'): -8.0, ('S', 'G'): 4.0, ('P', 'M'): -6.0, ('Y', 'M'): 1.0, ('H', 'D'): 3.0, ('I', 'E'): -9.0, ('V', 'E'): -9.0, ('R', 'R'): 7.0, ('Y', 'D'): -3.0, ('V', 'W'): 4.0, ('T', 'C'): -2.0, ('K', 'N'): 6.0, ('T', 'H'): 0.0, ('Y', 'Y'): 3.0, ('Y', 'I'): 2.0, ('F', 'Q'): -5.0, ('T', 'I'): -3.0, ('L', 'I'): 7.0, ('M', 'Q'): -2.0, ('R', 'A'): 0.0, ('C', 'D'): -4.0, ('M', 'H'): -1.0, ('V', 'F'): 5.0, ('F', 'C'): 3.0, ('T', 'T'): 3.0, ('M', 'C'): 2.0, ('C', 'R'): -5.0, ('D', 'D'): 11.0, ('E', 'R'): 8.0, ('V', 'P'): -5.0, ('S', 'D'): 4.0, ('E', 'E'): 11.0, ('P', 'C'): -1.0, ('F', 'R'): -5.0, ('C', 'C'): 14.0, ('I', 'G'): -7.0, ('V', 'G'): -5.0, ('W', 'K'): -5.0, ('G', 'N'): 5.0, ('I', 'N'): -9.0, ('A', 'A'): 4.0, ('V', 'Q'): -8.0, ('F', 'K'): -7.0, ('T', 'A'): 0.0, ('K', 'L'): -7.0, ('L', 'N'): -7.0, ('Y', 'N'): -2.0, ('F', 'F'): 6.0, ('L', 'G'): -6.0, ('F', 'A'): -1.0, ('S', 'K'): 3.0, ('V', 'R'): -6.0, ('P', 'H'): 2.0, ('K', 'K'): 13.0, ('H', 'C'): -2.0, ('E', 'N'): 6.0, ('F', 'L'): 6.0, ('H', 'H'): 5.0, ('C', 'A'): 2.0, ('I', 'I'): 10.0, ('V', 'A'): -2.0, ('W', 'I'): 4.0, ('T', 'F'): -2.0, ('V', 'S'): -4.0, ('L', 'L'): 9.0, ('F', 'M'): 3.0, ('L', 'E'): -6.0, ('M', 'M'): 4.0, ('D', 'R'): 4.0, ('M', 'D'): -4.0, ('W', 'H'): -1.0, ('G', 'C'): 0.0, ('S', 'R'): 2.0, ('S', 'I'): -5.0, ('P', 'Q'): 1.0, ('Y', 'A'): 0.0, ('E', 'A'): 0.0, ('K', 'I'): -9.0, ('H', 'A'): -1.0, ('P', 'G'): 6.0, ('F', 'N'): -6.0, ('H', 'N'): 2.0, ('Y', 'S'): -1.0, ('V', 'C'): 4.0, ('P', 'K'): 3.0, ('W', 'S'): -2.0, ('T', 'D'): 2.0, ('T', 'M'): -2.0, ('P', 'N'): 6.0, ('K', 'H'): 1.0, ('T', 'R'): 1.0, ('Y', 'R'): -2.0, ('L', 'C'): 2.0, ('W', 'N'): -4.0, ('G', 'A'): 0.0, ('S', 'P'): 3.0, ('E', 'Q'): 8.0, ('H', 'Q'): 1.0, ('D', 'N'): 8.0, ('Y', 'C'): 0.0, ('T', 'P'): 1.0, ('E', 'C'): -6.0, ('Y', 'Q'): -1.0, ('H', 'G'): 3.0, ('P', 'E'): 0.0, ('F', 'H'): -2.0, ('G', 'R'): 0.0, ('W', 'M'): 1.0, ('Y', 'T'): 0.0, ('Y', 'P'): -3.0, ('F', 'D'): -6.0, ('T', 'K'): 2.0, ('C', 'N'): -5.0, ('L', 'H'): -3.0, ('V', 'L'): 5.0, ('F', 'I'): 6.0, ('G', 'Q'): 0.0, ('L', 'A'): 0.0, ('M', 'I'): 3.0
    }
naod_matrix = update_matrix(naod_matrix, update_val=np.mean(list(naod_matrix.values())))
naod_matrix = prepare_matrix(naod_matrix)

# Q3.
qu3_matrix = {('W', 'L'): 4.0, ('G', 'G'): 8.0, ('S', 'N'): 3.0, ('K', 'G'): -1.0, ('S', 'E'): 2.0, ('Y', 'E'): 1.0, ('W', 'R'): 0.0, ('I', 'R'): 0.0, ('H', 'E'): 0.0, ('V', 'M'): 6.0, ('N', 'R'): 2.0, ('I', 'D'): 0.0, ('W', 'C'): 5.0, ('N', 'A'): 1.0, ('W', 'Q'): 2.0, ('L', 'Q'): 3.0, ('V', 'N'): 0.0, ('Q', 'N'): 1.0, ('M', 'K'): 0.0, ('G', 'E'): -1.0, ('S', 'L'): 0.0, ('P', 'R'): 1.0, ('K', 'E'): 1.0, ('S', 'C'): 1.0, ('E', 'D'): 4.0, ('Y', 'G'): 0.0, ('W', 'P'): 3.0, ('Q', 'A'): 2.0, ('V', 'Y'): 5.0, ('W', 'A'): 4.0, ('G', 'D'): 0.0, ('K', 'D'): 0.0, ('T', 'N'): 3.0, ('Y', 'F'): 4.0, ('W', 'W'): 8.0, ('L', 'D'): 0.0, ('M', 'R'): 0.0, ('Y', 'K'): 1.0, ('F', 'E'): 0.0, ('M', 'E'): 0.0, ('S', 'H'): 3.0, ('S', 'S'): 8.0, ('Y', 'L'): 4.0, ('H', 'R'): 2.0, ('P', 'A'): 3.0, ('K', 'C'): 0.0, ('S', 'A'): 2.0, ('P', 'I'): 3.0, ('Q', 'Q'): 8.0, ('T', 'Q'): 3.0, ('P', 'F'): 3.0, ('Y', 'W'): 5.0, ('I', 'A'): 5.0, ('V', 'I'): 6.0, ('Q', 'C'): 3.0, ('I', 'H'): 3.0, ('W', 'G'): -1.0, ('T', 'G'): 1.0, ('V', 'H'): 2.0, ('T', 'L'): 1.0, ('Y', 'H'): 3.0, ('M', 'L'): 6.0, ('F', 'G'): 0.0, ('M', 'G'): 2.0, ('S', 'Q'): 2.0, ('V', 'T'): 2.0, ('W', 'F'): 6.0, ('D', 'A'): 0.0, ('K', 'A'): 2.0, ('I', 'Q'): 2.0, ('N', 'N'): 8.0, ('W', 'T'): 2.0, ('P', 'D'): 1.0, ('I', 'C'): 4.0, ('V', 'K'): 0.0, ('K', 'R'): 6.0, ('W', 'E'): 0.0, ('T', 'E'): 3.0, ('L', 'R'): 0.0, ('Q', 'R'): 0.0, ('T', 'S'): 4.0, ('S', 'M'): 0.0, ('M', 'N'): 0.0, ('V', 'D'): 0.0, ('Q', 'D'): 2.0, ('M', 'A'): 5.0, ('K', 'Q'): 1.0, ('V', 'V'): 8.0, ('W', 'D'): 0.0, ('P', 'P'): 8.0, ('S', 'F'): 0.0, ('P', 'L'): 2.0, ('S', 'G'): 1.0, ('P', 'M'): 3.0, ('Y', 'M'): 4.0, ('H', 'D'): 0.0, ('I', 'E'): 0.0, ('V', 'E'): 0.0, ('R', 'R'): 8.0, ('Y', 'D'): 1.0, ('V', 'W'): 5.0, ('T', 'C'): 1.0, ('K', 'N'): 2.0, ('T', 'H'): 2.0, ('Y', 'Y'): 8.0, ('Y', 'I'): 4.0, ('F', 'Q'): 3.0, ('T', 'I'): 1.0, ('L', 'I'): 6.0, ('M', 'Q'): 2.0, ('R', 'A'): 2.0, ('C', 'D'): 0.0, ('M', 'H'): 3.0, ('V', 'F'): 5.0, ('F', 'C'): 6.0, ('T', 'T'): 8.0, ('M', 'C'): 5.0, ('C', 'R'): 0.0, ('D', 'D'): 8.0, ('E', 'R'): 0.0, ('V', 'P'): 2.0, ('S', 'D'): 2.0, ('E', 'E'): 8.0, ('P', 'C'): 4.0, ('F', 'R'): 0.0, ('C', 'C'): 8.0, ('I', 'G'): 0.0, ('V', 'G'): 2.0, ('W', 'K'): 1.0, ('G', 'N'): 2.0, ('I', 'N'): 0.0, ('A', 'A'): 8.0, ('V', 'Q'): 3.0, ('F', 'K'): 1.0, ('T', 'A'): 3.0, ('K', 'L'): 0.0, ('L', 'N'): 0.0, ('Y', 'N'): 2.0, ('F', 'F'): 8.0, ('L', 'G'): 1.0, ('F', 'A'): 5.0, ('S', 'K'): 3.0, ('V', 'R'): 0.0, ('P', 'H'): 4.0, ('K', 'K'): 8.0, ('H', 'C'): 4.0, ('E', 'N'): 3.0, ('F', 'L'): 6.0, ('H', 'H'): 8.0, ('C', 'A'): 5.0, ('I', 'I'): 8.0, ('V', 'A'): 5.0, ('W', 'I'): 4.0, ('T', 'F'): 2.0, ('V', 'S'): 0.0, ('L', 'L'): 8.0, ('F', 'M'): 5.0, ('L', 'E'): 0.0, ('M', 'M'): 8.0, ('D', 'R'): -1.0, ('M', 'D'): 0.0, ('W', 'H'): 3.0, ('G', 'C'): 1.0, ('S', 'R'): 3.0, ('S', 'I'): 0.0, ('P', 'Q'): 2.0, ('Y', 'A'): 4.0, ('E', 'A'): 0.0, ('K', 'I'): 1.0, ('H', 'A'): 4.0, ('P', 'G'): 0.0, ('F', 'N'): 1.0, ('H', 'N'): 2.0, ('Y', 'S'): 2.0, ('V', 'C'): 5.0, ('P', 'K'): 1.0, ('W', 'S'): 1.0, ('T', 'D'): 4.0, ('T', 'M'): 1.0, ('P', 'N'): 3.0, ('K', 'H'): 3.0, ('T', 'R'): 2.0, ('Y', 'R'): 0.0, ('L', 'C'): 5.0, ('W', 'N'): 0.0, ('G', 'A'): 2.0, ('S', 'P'): 1.0, ('E', 'Q'): 2.0, ('H', 'Q'): 4.0, ('D', 'N'): 3.0, ('Y', 'C'): 4.0, ('T', 'P'): 2.0, ('E', 'C'): 0.0, ('Y', 'Q'): 2.0, ('H', 'G'): 0.0, ('P', 'E'): 0.0, ('F', 'H'): 4.0, ('G', 'R'): 2.0, ('W', 'M'): 4.0, ('Y', 'T'): 3.0, ('Y', 'P'): 3.0, ('F', 'D'): 0.0, ('T', 'K'): 3.0, ('C', 'N'): 0.0, ('L', 'H'): 2.0, ('V', 'L'): 6.0, ('F', 'I'): 5.0, ('G', 'Q'): 2.0, ('L', 'A'): 5.0, ('M', 'I'): 5.0
    }
qu3_matrix = update_matrix(qu3_matrix, update_val=np.mean(list(qu3_matrix.values())))
qu3_matrix = prepare_matrix(qu3_matrix)

# Q1.
qu1_matrix = {('W', 'L'): 0.268, ('G', 'G'): 1.0, ('S', 'N'): -0.051, ('K', 'G'): 0.006, ('S', 'E'): -0.081, ('Y', 'E'): 0.273, ('W', 'R'): -0.059, ('I', 'R'): 0.305, ('H', 'E'): 0.121, ('V', 'M'): 0.278, ('N', 'R'): 0.266, ('I', 'D'): 0.242, ('W', 'C'): 0.174, ('N', 'A'): 0.37, ('W', 'Q'): 0.515, ('L', 'Q'): 0.251, ('V', 'N'): 0.512, ('Q', 'N'): 0.082, ('M', 'K'): 0.285, ('G', 'E'): 0.164, ('S', 'L'): -0.042, ('P', 'R'): -0.037, ('K', 'E'): 0.247, ('S', 'C'): -0.178, ('E', 'D'): 0.137, ('Y', 'G'): 0.372, ('W', 'P'): -0.118, ('Q', 'A'): 0.261, ('V', 'Y'): 0.614, ('W', 'A'): 0.081, ('G', 'D'): 0.25, ('K', 'D'): 0.184, ('T', 'N'): 0.076, ('Y', 'F'): 0.428, ('W', 'W'): 1.0, ('L', 'D'): 0.261, ('M', 'R'): 0.374, ('Y', 'K'): 0.436, ('F', 'E'): 0.433, ('M', 'E'): 0.128, ('S', 'H'): 0.144, ('S', 'S'): 1.0, ('Y', 'L'): 0.246, ('H', 'R'): 0.093, ('P', 'A'): 0.183, ('K', 'C'): 0.054, ('S', 'A'): 0.193, ('P', 'I'): 0.065, ('Q', 'Q'): 1.0, ('T', 'Q'): 0.344, ('P', 'F'): 0.091, ('Y', 'W'): 0.293, ('I', 'A'): 0.476, ('V', 'I'): 0.641, ('Q', 'C'): 0.191, ('I', 'H'): 0.406, ('W', 'G'): 0.136, ('T', 'G'): 0.335, ('V', 'H'): 0.534, ('T', 'L'): 0.386, ('Y', 'H'): 0.083, ('M', 'L'): 0.112, ('F', 'G'): 0.455, ('M', 'G'): 0.326, ('S', 'Q'): 0.404, ('V', 'T'): 0.329, ('W', 'F'): 0.451, ('D', 'A'): 0.299, ('K', 'A'): 0.398, ('I', 'Q'): 0.372, ('N', 'N'): 1.0, ('W', 'T'): 0.564, ('P', 'D'): 0.008, ('I', 'C'): -0.029, ('V', 'K'): 0.249, ('K', 'R'): 0.236, ('W', 'E'): 0.149, ('T', 'E'): 0.22, ('L', 'R'): 0.446, ('Q', 'R'): -0.084, ('T', 'S'): -0.124, ('S', 'M'): 0.165, ('M', 'N'): 0.438, ('V', 'D'): 0.149, ('Q', 'D'): 0.321, ('M', 'A'): 0.207, ('K', 'Q'): 0.323, ('V', 'V'): 1.0, ('W', 'D'): 0.578, ('P', 'P'): 1.0, ('S', 'F'): -0.012, ('P', 'L'): 0.079, ('S', 'G'): 0.015, ('P', 'M'): 0.266, ('Y', 'M'): -0.057, ('H', 'D'): -0.117, ('I', 'E'): 0.212, ('V', 'E'): 0.444, ('R', 'R'): 1.0, ('Y', 'D'): 0.32, ('V', 'W'): 0.378, ('T', 'C'): 0.087, ('K', 'N'): 0.208, ('T', 'H'): 0.259, ('Y', 'Y'): 1.0, ('Y', 'I'): 0.333, ('F', 'Q'): 0.364, ('T', 'I'): 0.385, ('L', 'I'): 0.57, ('M', 'Q'): 0.211, ('R', 'A'): 0.39, ('C', 'D'): 0.035, ('M', 'H'): 0.461, ('V', 'F'): 0.626, ('F', 'C'): 0.55, ('T', 'T'): 1.0, ('M', 'C'): -0.006, ('C', 'R'): 0.273, ('D', 'D'): 1.0, ('E', 'R'): 0.375, ('V', 'P'): 0.02, ('S', 'D'): 0.012, ('E', 'E'): 1.0, ('P', 'C'): 0.355, ('F', 'R'): 0.552, ('C', 'C'): 1.0, ('I', 'G'): 0.429, ('V', 'G'): 0.639, ('W', 'K'): 0.436, ('G', 'N'): 0.293, ('I', 'N'): 0.452, ('A', 'A'): 1.0, ('V', 'Q'): 0.334, ('F', 'K'): 0.217, ('T', 'A'): -0.083, ('K', 'L'): -0.08, ('L', 'N'): 0.191, ('Y', 'N'): 0.387, ('F', 'F'): 1.0, ('L', 'G'): 0.327, ('F', 'A'): 0.628, ('S', 'K'): 0.102, ('V', 'R'): 0.531, ('P', 'H'): 0.304, ('K', 'K'): 1.0, ('H', 'C'): 0.527, ('E', 'N'): 0.206, ('F', 'L'): 0.769, ('H', 'H'): 1.0, ('C', 'A'): 0.27, ('I', 'I'): 1.0, ('V', 'A'): 0.565, ('W', 'I'): 0.357, ('T', 'F'): 0.306, ('V', 'S'): -0.103, ('L', 'L'): 1.0, ('F', 'M'): 0.111, ('L', 'E'): 0.291, ('M', 'M'): 1.0, ('D', 'R'): -0.109, ('M', 'D'): -0.295, ('W', 'H'): 0.232, ('G', 'C'): 0.246, ('S', 'R'): -0.043, ('S', 'I'): 0.166, ('P', 'Q'): -0.168, ('Y', 'A'): 0.683, ('E', 'A'): 0.3, ('K', 'I'): 0.088, ('H', 'A'): 0.356, ('P', 'G'): -0.023, ('F', 'N'): 0.278, ('H', 'N'): 0.299, ('Y', 'S'): -0.093, ('V', 'C'): 0.427, ('P', 'K'): 0.099, ('W', 'S'): -0.023, ('T', 'D'): 0.328, ('T', 'M'): -0.141, ('P', 'N'): 0.156, ('K', 'H'): 0.072, ('T', 'R'): 0.037, ('Y', 'R'): 0.201, ('L', 'C'): 0.501, ('W', 'N'): 0.277, ('G', 'A'): 0.407, ('S', 'P'): -0.363, ('E', 'Q'): 0.228, ('H', 'Q'): 0.63, ('D', 'N'): 0.037, ('Y', 'C'): 0.195, ('T', 'P'): -0.336, ('E', 'C'): 0.341, ('Y', 'Q'): 0.207, ('H', 'G'): 0.497, ('P', 'E'): -0.216, ('F', 'H'): 0.405, ('G', 'R'): 0.394, ('W', 'M'): -0.075, ('Y', 'T'): 0.0, ('Y', 'P'): -0.054, ('F', 'D'): 0.475, ('T', 'K'): -0.206, ('C', 'N'): 0.105, ('L', 'H'): 0.457, ('V', 'L'): 0.598, ('F', 'I'): 0.532, ('G', 'Q'): 0.494, ('L', 'A'): 0.555, ('M', 'I'): 0.44
    }
qu1_matrix = update_matrix(qu1_matrix, update_val=np.mean(list(qu1_matrix.values())))
qu1_matrix = prepare_matrix(qu1_matrix)

# Q2.
qu2_matrix = {('W', 'L'): 0.843, ('G', 'G'): 0.0, ('S', 'N'): 0.661, ('K', 'G'): 0.0, ('S', 'E'): 0.204, ('Y', 'E'): 0.036, ('W', 'R'): 0.169, ('I', 'R'): 0.108, ('H', 'E'): -0.102, ('V', 'M'): 0.874, ('N', 'R'): 0.558, ('I', 'D'): -0.185, ('W', 'C'): 0.779, ('N', 'A'): 0.138, ('W', 'Q'): 0.478, ('L', 'Q'): 0.439, ('V', 'N'): -0.203, ('Q', 'N'): 0.222, ('M', 'K'): -0.044, ('G', 'E'): 0.0, ('S', 'L'): 0.003, ('P', 'R'): 0.133, ('K', 'E'): -0.051, ('S', 'C'): 0.104, ('E', 'D'): 0.851, ('Y', 'G'): 0.0, ('W', 'P'): 0.597, ('Q', 'A'): 0.55, ('V', 'Y'): 0.632, ('W', 'A'): 0.825, ('G', 'D'): 0.0, ('K', 'D'): -0.064, ('T', 'N'): 0.519, ('Y', 'F'): 0.743, ('W', 'W'): 1.0, ('L', 'D'): -0.249, ('M', 'R'): 0.058, ('Y', 'K'): 0.182, ('F', 'E'): -0.187, ('M', 'E'): -0.18, ('S', 'H'): 0.568, ('S', 'S'): 1.0, ('Y', 'L'): 0.625, ('H', 'R'): 0.392, ('P', 'A'): 0.656, ('K', 'C'): 0.002, ('S', 'A'): 0.281, ('P', 'I'): 0.572, ('Q', 'Q'): 1.0, ('T', 'Q'): 0.61, ('P', 'F'): 0.661, ('Y', 'W'): 0.802, ('I', 'A'): 0.888, ('V', 'I'): 0.946, ('Q', 'C'): 0.418, ('I', 'H'): 0.378, ('W', 'G'): 0.0, ('T', 'G'): 0.0, ('V', 'H'): 0.284, ('T', 'L'): 0.346, ('Y', 'H'): 0.492, ('M', 'L'): 0.881, ('F', 'G'): 0.0, ('M', 'G'): 0.0, ('S', 'Q'): 0.357, ('V', 'T'): 0.396, ('W', 'F'): 0.907, ('D', 'A'): -0.018, ('K', 'A'): 0.281, ('I', 'Q'): 0.511, ('N', 'N'): 1.0, ('W', 'T'): 0.471, ('P', 'D'): 0.276, ('I', 'C'): 0.717, ('V', 'K'): 0.024, ('K', 'R'): 0.872, ('W', 'E'): -0.216, ('T', 'E'): 0.287, ('L', 'R'): 0.049, ('Q', 'R'): 0.243, ('T', 'S'): 0.601, ('S', 'M'): 0.054, ('M', 'N'): -0.09, ('V', 'D'): -0.196, ('Q', 'D'): 0.257, ('M', 'A'): 0.858, ('K', 'Q'): 0.377, ('V', 'V'): 1.0, ('W', 'D'): -0.079, ('P', 'P'): 1.0, ('S', 'F'): 0.152, ('P', 'L'): 0.504, ('S', 'G'): 0.0, ('P', 'M'): 0.523, ('Y', 'M'): 0.764, ('H', 'D'): 0.067, ('I', 'E'): -0.135, ('V', 'E'): -0.186, ('R', 'R'): 1.0, ('Y', 'D'): 0.225, ('V', 'W'): 0.835, ('T', 'C'): 0.326, ('K', 'N'): 0.49, ('T', 'H'): 0.399, ('Y', 'Y'): 1.0, ('Y', 'I'): 0.573, ('F', 'Q'): 0.482, ('T', 'I'): 0.382, ('L', 'I'): 0.96, ('M', 'Q'): 0.45, ('R', 'A'): 0.25, ('C', 'D'): 0.015, ('M', 'H'): 0.441, ('V', 'F'): 0.909, ('F', 'C'): 0.857, ('T', 'T'): 1.0, ('M', 'C'): 0.912, ('C', 'R'): 0.113, ('D', 'D'): 1.0, ('E', 'R'): 0.037, ('V', 'P'): 0.462, ('S', 'D'): 0.245, ('E', 'E'): 1.0, ('P', 'C'): 0.558, ('F', 'R'): 0.108, ('C', 'C'): 1.0, ('I', 'G'): 0.0, ('V', 'G'): 0.0, ('W', 'K'): 0.111, ('G', 'N'): 0.0, ('I', 'N'): -0.101, ('A', 'A'): 1.0, ('V', 'Q'): 0.458, ('F', 'K'): 0.061, ('T', 'A'): 0.574, ('K', 'L'): -0.004, ('L', 'N'): -0.172, ('Y', 'N'): 0.338, ('F', 'F'): 1.0, ('L', 'G'): 0.0, ('F', 'A'): 0.874, ('S', 'K'): 0.745, ('V', 'R'): 0.045, ('P', 'H'): 0.651, ('K', 'K'): 1.0, ('H', 'C'): 0.425, ('E', 'N'): 0.408, ('F', 'L'): 0.927, ('H', 'H'): 1.0, ('C', 'A'): 0.799, ('I', 'I'): 1.0, ('V', 'A'): 0.85, ('W', 'I'): 0.792, ('T', 'F'): 0.41, ('V', 'S'): 0.005, ('L', 'L'): 1.0, ('F', 'M'): 0.903, ('L', 'E'): -0.223, ('M', 'M'): 1.0, ('D', 'R'): -0.054, ('M', 'D'): -0.109, ('W', 'H'): 0.46, ('G', 'C'): 0.0, ('S', 'R'): 0.804, ('S', 'I'): 0.083, ('P', 'Q'): 0.598, ('Y', 'A'): 0.772, ('E', 'A'): -0.116, ('K', 'I'): 0.099, ('H', 'A'): 0.523, ('P', 'G'): 0.0, ('F', 'N'): -0.072, ('H', 'N'): 0.305, ('Y', 'S'): 0.307, ('V', 'C'): 0.755, ('P', 'K'): 0.206, ('W', 'S'): 0.204, ('T', 'D'): 0.382, ('T', 'M'): 0.313, ('P', 'N'): 0.265, ('K', 'H'): 0.488, ('T', 'R'): 0.427, ('Y', 'R'): 0.266, ('L', 'C'): 0.787, ('W', 'N'): 0.003, ('G', 'A'): 0.0, ('S', 'P'): 0.2, ('E', 'Q'): 0.254, ('H', 'Q'): 0.614, ('D', 'N'): 0.452, ('Y', 'C'): 0.817, ('T', 'P'): 0.435, ('E', 'C'): -0.167, ('Y', 'Q'): 0.55, ('H', 'G'): 0.0, ('P', 'E'): 0.097, ('F', 'H'): 0.511, ('G', 'R'): 0.0, ('W', 'M'): 0.785, ('Y', 'T'): 0.54, ('Y', 'P'): 0.632, ('F', 'D'): -0.107, ('T', 'K'): 0.54, ('C', 'N'): 0.032, ('L', 'H'): 0.289, ('V', 'L'): 0.973, ('F', 'I'): 0.893, ('G', 'Q'): 0.0, ('L', 'A'): 0.862, ('M', 'I'): 0.842
    }
qu2_matrix = update_matrix(qu2_matrix, update_val=np.mean(list(qu2_matrix.values())))
qu2_matrix = prepare_matrix(qu2_matrix)

# QUIB.
quib_matrix = {('W', 'L'): -1.2, ('G', 'G'): 7.5, ('S', 'N'): 1.4, ('K', 'G'): 0.4, ('S', 'E'): 1.1, ('Y', 'E'): -2.2, ('W', 'R'): -1.5, ('I', 'R'): -1.9, ('H', 'E'): 0.3, ('V', 'M'): 1.7, ('N', 'R'): 0.7, ('I', 'D'): -2.9, ('W', 'C'): -0.5, ('N', 'A'): 1.1, ('W', 'Q'): -2.9, ('L', 'Q'): -1.2, ('V', 'N'): -0.9, ('Q', 'N'): 1.9, ('M', 'K'): -0.5, ('G', 'E'): 0.5, ('S', 'L'): -0.8, ('P', 'R'): -0.6, ('K', 'E'): 1.2, ('S', 'C'): 0.7, ('E', 'D'): 3.2, ('Y', 'G'): -4.8, ('W', 'P'): -5.0, ('Q', 'A'): -0.1, ('V', 'Y'): 0.3, ('W', 'A'): -3.3, ('G', 'D'): 0.9, ('K', 'D'): 1.4, ('T', 'N'): 1.4, ('Y', 'F'): 5.2, ('W', 'W'): 14.9, ('L', 'D'): -3.4, ('M', 'R'): -1.4, ('Y', 'K'): -1.5, ('F', 'E'): -13.7, ('M', 'E'): -2.0, ('S', 'H'): -0.1, ('S', 'S'): 2.8, ('Y', 'L'): 0.8, ('H', 'R'): 1.5, ('P', 'A'): 0.7, ('K', 'C'): -3.0, ('S', 'A'): 1.7, ('P', 'I'): -2.4, ('Q', 'Q'): 3.6, ('T', 'Q'): -0.1, ('P', 'F'): -4.1, ('Y', 'W'): 4.9, ('I', 'A'): 0.3, ('V', 'I'): 4.5, ('Q', 'C'): -2.5, ('I', 'H'): -1.8, ('W', 'G'): -4.2, ('T', 'G'): -0.6, ('V', 'H'): -2.5, ('T', 'L'): 0.3, ('Y', 'H'): 2.9, ('M', 'L'): 3.1, ('F', 'G'): -4.7, ('M', 'G'): -3.8, ('S', 'Q'): 0.9, ('V', 'T'): 1.5, ('W', 'F'): 3.7, ('D', 'A'): 1.0, ('K', 'A'): -0.2, ('I', 'Q'): -0.9, ('N', 'N'): 2.5, ('W', 'T'): -2.9, ('P', 'D'): -0.2, ('I', 'C'): -3.2, ('V', 'K'): -1.0, ('K', 'R'): 3.4, ('W', 'E'): -4.7, ('T', 'E'): 1.6, ('L', 'R'): -1.5, ('Q', 'R'): 2.0, ('T', 'S'): 2.6, ('S', 'M'): -1.1, ('M', 'N'): -2.1, ('V', 'D'): -2.5, ('Q', 'D'): 1.1, ('M', 'A'): -0.2, ('K', 'Q'): 2.2, ('V', 'V'): 4.2, ('W', 'D'): -5.7, ('P', 'P'): 8.1, ('S', 'F'): -2.5, ('P', 'L'): -1.4, ('S', 'G'): 1.6, ('P', 'M'): -1.9, ('Y', 'M'): 0.5, ('H', 'D'): 0.5, ('I', 'E'): -3.1, ('V', 'E'): -1.3, ('R', 'R'): 5.2, ('Y', 'D'): -2.9, ('V', 'W'): -2.5, ('T', 'C'): 0.3, ('K', 'N'): 1.6, ('T', 'H'): -0.2, ('Y', 'Y'): 8.1, ('Y', 'I'): 0.2, ('F', 'Q'): -1.7, ('T', 'I'): 0.0, ('L', 'I'): 3.4, ('M', 'Q'): -0.6, ('R', 'A'): 0.2, ('C', 'D'): -3.1, ('M', 'H'): -0.8, ('V', 'F'): 0.9, ('F', 'C'): -0.8, ('T', 'T'): 0.4, ('M', 'C'): -1.3, ('C', 'R'): -1.3, ('D', 'D'): 5.3, ('E', 'R'): 1.9, ('V', 'P'): -1.1, ('S', 'D'): 1.7, ('E', 'E'): 3.7, ('P', 'C'): -3.6, ('F', 'R'): -3.2, ('C', 'C'): 11.5, ('I', 'G'): -3.7, ('V', 'G'): -1.4, ('W', 'K'): -3.0, ('G', 'N'): 0.7, ('I', 'N'): -2.4, ('A', 'A'): 2.5, ('V', 'Q'): -1.5, ('F', 'K'): -2.8, ('T', 'A'): 1.7, ('K', 'L'): -2.0, ('L', 'N'): -2.4, ('Y', 'N'): -0.8, ('F', 'F'): 7.0, ('L', 'G'): -3.8, ('F', 'A'): -1.6, ('S', 'K'): 1.4, ('V', 'R'): -2.8, ('P', 'H'): -2.1, ('K', 'K'): 3.9, ('H', 'C'): -1.7, ('E', 'N'): 2.3, ('F', 'L'): 3.7, ('H', 'H'): 6.8, ('C', 'A'): 1.2, ('I', 'I'): 4.5, ('V', 'A'): 1.9, ('W', 'I'): -1.8, ('T', 'F'): -0.8, ('V', 'S'): -3.0, ('L', 'L'): 5.2, ('F', 'M'): 1.7, ('L', 'E'): -1.5, ('M', 'M'): 5.4, ('D', 'R'): 0.1, ('M', 'D'): -2.8, ('W', 'H'): -1.2, ('G', 'C'): -1.3, ('S', 'R'): 0.2, ('S', 'I'): -1.1, ('P', 'Q'): 1.0, ('Y', 'A'): -1.8, ('E', 'A'): 1.2, ('K', 'I'): -1.5, ('H', 'A'): -1.4, ('P', 'G'): -0.8, ('F', 'N'): -2.5, ('H', 'N'): 1.4, ('Y', 'S'): -0.9, ('V', 'C'): 0.7, ('P', 'K'): 0.2, ('W', 'S'): -2.8, ('T', 'D'): 0.1, ('T', 'M'): -0.3, ('P', 'N'): -0.1, ('K', 'H'): 1.1, ('T', 'R'): 0.2, ('Y', 'R'): -0.9, ('L', 'C'): -1.6, ('W', 'N'): -4.0, ('G', 'A'): 1.4, ('S', 'P'): 2.0, ('E', 'Q'): 1.7, ('H', 'Q'): 1.4, ('D', 'N'): 3.3, ('Y', 'C'): -0.3, ('T', 'P'): 1.1, ('E', 'C'): -2.4, ('Y', 'Q'): -1.5, ('H', 'G'): -1.7, ('P', 'E'): 0.0, ('F', 'H'): -0.9, ('G', 'R'): -0.2, ('W', 'M'): -0.6, ('Y', 'T'): -0.8, ('Y', 'P'): -3.3, ('F', 'D'): -3.7, ('T', 'K'): 1.0, ('C', 'N'): -1.9, ('L', 'H'): -2.4, ('V', 'L'): 3.4, ('F', 'I'): 2.2, ('G', 'Q'): -0.3, ('L', 'A'): -0.2, ('M', 'I'): 2.2
    }
quib_matrix = update_matrix(quib_matrix, update_val=np.mean(list(quib_matrix.values())))
quib_matrix = prepare_matrix(quib_matrix)

# SH.
sh_matrix = {('R', 'I'): 0.0, ('S', 'W'): 0.0, ('G', 'G'): 1.0, ('D', 'G'): 0.0, ('E', 'S'): 0.0, ('H', 'W'): 0.0, ('D', 'L'): 0.0, ('E', 'M'): 0.0, ('C', 'M'): 0.0, ('G', 'P'): 0.0, ('S', 'T'): 0.0, ('G', 'F'): 0.0, ('A', 'N'): 0.0, ('K', 'F'): 0.0, ('A', 'Y'): 0.0, ('F', 'Y'): 1.0, ('P', 'Y'): 0.0, ('M', 'Y'): 1.0, ('A', 'P'): 0.0, ('C', 'L'): 0.0, ('L', 'F'): 1.0, ('M', 'P'): 0.0, ('N', 'S'): 0.0, ('G', 'W'): 0.0, ('D', 'W'): 0.0, ('R', 'K'): 0.0, ('K', 'W'): 0.0, ('M', 'M'): 1.0, ('D', 'E'): 0.0, ('P', 'V'): 0.0, ('I', 'T'): 0.0, ('C', 'K'): 0.0, ('H', 'K'): 0.0, ('Y', 'Y'): 1.0, ('G', 'V'): 0.0, ('I', 'F'): 1.0, ('R', 'L'): 0.0, ('K', 'V'): 0.0, ('C', 'Y'): 0.0, ('A', 'I'): 0.0, ('L', 'V'): 1.0, ('N', 'C'): 0.0, ('W', 'W'): 1.0, ('T', 'W'): 0.0, ('A', 'R'): 0.0, ('Q', 'S'): 0.0, ('R', 'M'): 0.0, ('F', 'T'): 0.0, ('E', 'T'): 0.0, ('Q', 'T'): 0.0, ('S', 'S'): 0.7, ('D', 'C'): 0.0, ('P', 'P'): 1.0, ('D', 'H'): 0.0, ('E', 'F'): 0.0, ('N', 'L'): 0.0, ('W', 'V'): 1.0, ('I', 'V'): 1.0, ('E', 'I'): 0.0, ('C', 'I'): 0.0, ('H', 'I'): 0.0, ('F', 'F'): 1.0, ('G', 'T'): 0.0, ('R', 'N'): 0.0, ('K', 'T'): 0.0, ('C', 'W'): 0.0, ('A', 'K'): 0.0, ('L', 'T'): 0.0, ('N', 'M'): 0.0, ('L', 'M'): 1.0, ('A', 'T'): 0.0, ('C', 'H'): 0.0, ('G', 'K'): 0.0, ('D', 'S'): 0.0, ('K', 'S'): 0.0, ('C', 'V'): 0.0, ('E', 'V'): 0.0, ('H', 'P'): 0.0, ('E', 'Y'): 0.0, ('H', 'Y'): 0.0, ('N', 'N'): 0.7, ('F', 'V'): 1.0, ('H', 'F'): 0.0, ('E', 'K'): 0.0, ('C', 'G'): 0.0, ('Q', 'E'): 0.0, ('R', 'P'): 0.0, ('A', 'M'): 0.0, ('A', 'D'): 0.0, ('F', 'W'): 1.0, ('L', 'K'): 0.0, ('M', 'W'): 1.0, ('A', 'V'): 0.0, ('C', 'F'): 0.0, ('S', 'Y'): 0.0, ('N', 'Y'): 0.0, ('G', 'I'): 0.0, ('D', 'Q'): 0.0, ('R', 'Q'): 0.0, ('C', 'T'): 0.0, ('D', 'F'): 0.0, ('E', 'P'): 0.0, ('V', 'V'): 1.0, ('H', 'V'): 0.0, ('P', 'T'): 0.0, ('I', 'S'): 0.0, ('N', 'H'): 0.0, ('C', 'E'): 0.0, ('H', 'M'): 0.0, ('Q', 'G'): 0.0, ('G', 'H'): 0.0, ('I', 'L'): 1.0, ('R', 'R'): 0.7, ('K', 'P'): 0.0, ('C', 'S'): 0.0, ('A', 'F'): 0.0, ('L', 'P'): 0.0, ('A', 'Q'): 0.0, ('N', 'I'): 0.0, ('G', 'Y'): 0.0, ('D', 'V'): 0.0, ('Q', 'F'): 0.0, ('T', 'T'): 0.7, ('S', 'V'): 0.0, ('R', 'S'): 0.0, ('F', 'S'): 0.0, ('D', 'D'): 0.7, ('H', 'T'): 0.0, ('D', 'M'): 0.0, ('E', 'E'): 0.7, ('K', 'M'): 0.0, ('E', 'L'): 0.0, ('Q', 'W'): 0.0, ('C', 'C'): 0.7, ('Q', 'K'): 0.0, ('Q', 'M'): 0.0, ('R', 'T'): 0.0, ('C', 'Q'): 0.0, ('A', 'A'): 0.7, ('W', 'Y'): 1.0, ('L', 'Y'): 1.0, ('Q', 'V'): 0.0, ('T', 'V'): 0.0, ('A', 'S'): 0.0, ('N', 'K'): 0.0, ('M', 'S'): 0.0, ('R', 'C'): 0.0, ('D', 'T'): 0.0, ('G', 'M'): 0.0, ('Q', 'I'): 0.0, ('Y', 'V'): 1.0, ('C', 'P'): 0.0, ('P', 'S'): 0.0, ('D', 'K'): 0.0, ('E', 'G'): 0.0, ('K', 'K'): 0.7, ('I', 'W'): 1.0, ('N', 'T'): 0.0, ('H', 'H'): 0.7, ('R', 'D'): 0.0, ('I', 'I'): 1.0, ('Q', 'Q'): 0.7, ('G', 'L'): 0.0, ('A', 'H'): 0.0, ('R', 'V'): 0.0, ('A', 'C'): 0.0, ('L', 'W'): 1.0, ('L', 'L'): 1.0, ('Q', 'H'): 0.0, ('Q', 'P'): 0.0, ('R', 'E'): 0.0, ('E', 'W'): 0.0, ('R', 'W'): 0.0, ('H', 'S'): 0.0, ('N', 'D'): 0.0, ('D', 'I'): 0.0, ('Q', 'Y'): 0.0, ('E', 'H'): 0.0, ('N', 'V'): 0.0, ('R', 'F'): 0.0, ('I', 'K'): 0.0, ('A', 'E'): 0.0, ('N', 'E'): 0.0, ('M', 'T'): 0.0, ('A', 'W'): 0.0, ('N', 'W'): 0.0, ('G', 'S'): 0.0, ('R', 'G'): 0.0, ('D', 'P'): 0.0, ('M', 'F'): 1.0, ('F', 'P'): 0.0, ('D', 'Y'): 0.0, ('R', 'Y'): 0.0, ('K', 'Y'): 0.0, ('I', 'Y'): 1.0, ('P', 'W'): 0.0, ('N', 'F'): 0.0, ('I', 'P'): 0.0, ('N', 'P'): 0.0, ('H', 'L'): 0.0, ('R', 'H'): 0.0, ('I', 'M'): 1.0, ('Q', 'L'): 0.0, ('A', 'L'): 0.0, ('A', 'G'): 0.0, ('N', 'G'): 0.0, ('L', 'S'): 0.0, ('M', 'V'): 1.0, ('N', 'Q'): 0.0, ('T', 'Y'): 0.0
    }
sh_matrix = update_matrix(sh_matrix, update_val=np.mean(list(sh_matrix.values())))
sh_matrix = prepare_matrix(sh_matrix)


# #####################################################################
# ############ Splitting alignment file in single aa ##################
# #####################################################################

def get_scoring_matrix(matrix_name="BLOSUM62"):
    if matrix_name == "BLOSUM62":
        selected_matrix = blosum62
    elif matrix_name == "DDMC_SC1":
        selected_matrix = ddmc_sc1
    elif matrix_name == "SPC_MATRIX":
        selected_matrix = spc_matrix
    elif matrix_name == "CCPC_MATRIX":
        selected_matrix = ccpc_matrix
    elif matrix_name == "AZAE2_MATRIX":
        selected_matrix = azae2_matrix
    elif matrix_name == "NAOD_MATRIX":
        selected_matrix = naod_matrix
    elif matrix_name == "QU3_MATRIX":
        selected_matrix = qu3_matrix
    elif matrix_name == "QU1_MATRIX":
        selected_matrix = qu1_matrix
    elif matrix_name == "QU2_MATRIX":
        selected_matrix = qu2_matrix
    elif matrix_name == "QUIB_MATRIX":
        selected_matrix = quib_matrix
    elif matrix_name == "SH_MATRIX":
        selected_matrix = sh_matrix
    else:
        raise KeyError("Matrix not found: %s." % matrix_name)
    return selected_matrix


def compute_alignment_score(seq_1, seq_2, matrix_name="BLOSUM62", mode = 'normal', mod_type = None):

    #print(str("\nComputing alignment Score\n" + seq_1 + "\n" + seq_2))

    # Actually computes the scoring matrices values.
    list_value_aa = [] # Contains the scoring matrices values for each couple.
    selected_matrix = get_scoring_matrix(matrix_name)

    if mode == 'normal':
        for element in zip(seq_1, seq_2):
            if '-' in element:
                continue
            else:
                list_value_aa.append(selected_matrix[element])
        return np.mean(list_value_aa)

    if mode == 'modified':
        for element in zip(seq_1, seq_2):
            if '-' in element:
                continue
            else:
                list_value_aa.append(selected_matrix[element])
        list_value_aa = np.array(list_value_aa)

        #open matrix previously generated
        matrix_fh = open('matrix.txt', 'r')
        #read matrix file and divide
        str_matrix = ast.literal_eval(matrix_fh.read())
        matrix_fh.close()



        if mod_type == "simple":

            final_matrix = np.array([int(i) for i in str_matrix][:len(list_value_aa)])

            return np.mean(list_value_aa*final_matrix)

        elif mod_type == "galaxy":

            final_matrix = np.array([int(i) for i in str_matrix][:len(list_value_aa)])
            tot_score = 0
            for b_i, n_i in zip(list_value_aa, final_matrix):
                teta_i = int(b_i > 0)
                bm_i = b_i*(teta_i*n_i+1)
                tot_score += bm_i

            return tot_score/len(list_value_aa)

        else:
            raise KeyError(mode)
